// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonetaryCalculator.Infra.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MonetaryCalculator.Infra.Data.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    partial class EmployeeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MonetaryCalculator.Infra.Data.Models.EmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<bool>("Dismissed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LeaveCondition")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LeaveDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MonetaryCalculator.Infra.Data.Models.VacationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("MonetaryCalculator.Infra.Data.Models.WageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("CountUnit")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Wages");
                });

            modelBuilder.Entity("MonetaryCalculator.Infra.Data.Models.VacationModel", b =>
                {
                    b.HasOne("MonetaryCalculator.Infra.Data.Models.EmployeeModel", "Employee")
                        .WithMany("Vacations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("MonetaryCalculator.Infra.Data.Models.WageModel", b =>
                {
                    b.HasOne("MonetaryCalculator.Infra.Data.Models.EmployeeModel", "Employee")
                        .WithMany("Wages")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("MonetaryCalculator.Infra.Data.Models.EmployeeModel", b =>
                {
                    b.Navigation("Vacations");

                    b.Navigation("Wages");
                });
#pragma warning restore 612, 618
        }
    }
}
